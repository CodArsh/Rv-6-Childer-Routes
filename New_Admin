import React, { useEffect, useState } from "react";
// import Navbar from "../Navbar/Navbar";
// import { Outlet, Link } from "react-router-dom";
import {
  AppBar,
  Avatar,
  Collapse,
  Divider,
  Drawer,
  IconButton,
  List,
  ListItem,
  ListItemButton,
  ListItemIcon,
  ListItemText,
  ListSubheader,
  Menu,
  MenuItem,
  Stack,
  Toolbar,
  Breadcrumbs,
} from "@mui/material";
import AdminMenu from "../../json-api/AdminMenu.json";
import { deepOrange } from "@mui/material/colors";
import MediaQuery from "react-responsive";
import {
  Link,
  Outlet,
  useResolvedPath,
  useMatch,
  useLocation,
} from "react-router-dom";
function Admin() {
  const [active, setActive] = useState(true);
  const [activeMobile, setActiveMobile] = useState(false);
  const [width, setWidth] = useState(250);
  const location = useLocation();
  let routing = location.pathname.split("/");
  // Start - Open Profile Menu
  const [parent, setParent] = useState(null);
  const open = Boolean(parent);
  const controlDrawerDesktop = () => {
    return setActive(!active), active ? setWidth(0) : setWidth(250);
  };
  const controlDrawerMobile = () => {
    return (
      setActiveMobile(!activeMobile), activeMobile ? setWidth(0) : setWidth(250)
    );
  };
  const openProfile = (e) => {
    const element = e.currentTarget;
    return setParent(element);
  };

  const closeProfileMenu = () => {
    return setParent(null);
  };
  // End - Open Profile Menu

  const [collaps, setCollaps] = useState(false);
  const Nav = ({ data }) => {
    const resolve = useResolvedPath(data.link ? data.link : false);
    const activeLink = useMatch({ path: resolve.pathname, end: true });
    return (
      <>
        <ListItem sx={{ py: 0 }}>
          <ListItemButton
            onClick={data.isDropdown ? () => setCollaps(!collaps) : null}
            component={Link}
            to={data.link ? data.link : false}
            style={{
              background: activeLink && deepOrange[500],
              color: activeLink && "#fff",
            }}
          >
            <ListItemIcon>
              <span
                className="material-icons-outlined"
                style={{ color: activeLink && "#fff" }}
              >
                {data.icon}
              </span>
            </ListItemIcon>
            <ListItemText primary={data.label} />
            {data.isDropdown && (
              <span className="material-icons-outlined">
                {collaps ? "arrow_drop_up" : "arrow_drop_down"}
              </span>
            )}
          </ListItemButton>
        </ListItem>
        {data.isDropdown && <DropDown menu={data.dropDownMenu} />}
      </>
    );
  };
  const MenuList = ({ admin }) => {
    return (
      <>
        <List subheader={<ListSubheader>{admin.cat}</ListSubheader>}>
          {admin.menus.map((menu) => {
            return <Nav key={menu.id} data={menu} />;
          })}
        </List>
      </>
    );
  };
  const DropDown = ({ menu }) => {
    return (
      <>
        <Collapse in={collaps} sx={{ pl: 4 }}>
          {menu.map((item) => {
            return <Nav data={item} key={item.id} />;
          })}
        </Collapse>
      </>
    );
  };
  const BreadLink = ({ data }) => {
    return (
      <Link
        // to={data.item !== "admin-panel" && data.item}
        style={{
          textDecoration: "none",
          textTransform: "capitalize",
          color: data.index === data.length ? deepOrange[500] : "#777",
          fontWeight: data.index === routing.length - 1 && "bold",
        }}
      >
        {data.item}
      </Link>
    );
  };
  const DesktopDrawer = () => {
    return (
      <>
        <Drawer
          variant="persistent"
          open={active}
          sx={{
            width: width,
            "& .MuiDrawer-paper": {
              width: width,
              bgcolor: "#fff",
            },
          }}
        >
          <List
            sx={{ mt: 4 }}
            subheader={
              <ListSubheader>
                <img src="logo.webp" width={"200"} alt="brand-logo" />
              </ListSubheader>
            }
          />
          {AdminMenu.map((admin) => {
            return <MenuList key={admin.id} admin={admin} />;
          })}
        </Drawer>
      </>
    );
  };
  const MobileDrawer = () => {
    return (
      <>
        <Drawer
          variant="temporary"
          onClose={controlDrawerMobile}
          onClick={controlDrawerMobile}
          open={activeMobile}
          sx={{
            width: width,
            "& .MuiDrawer-paper": {
              width: width,
              bgcolor: "#fff",
            },
          }}
        >
          <List
            sx={{ mt: 4 }}
            subheader={
              <ListSubheader>
                <img src="logo.webp" width={"200"} alt="brand-logo" />
              </ListSubheader>
            }
          />
          {AdminMenu.map((admin) => {
            return <MenuList key={admin.id} admin={admin} />;
          })}
        </Drawer>
      </>
    );
  };
  return (
    <>
      <Stack>
        <MediaQuery minWidth={1080}>
          <DesktopDrawer />
        </MediaQuery>
        <MediaQuery maxWidth={1080}>
          <MobileDrawer />
        </MediaQuery>
        <AppBar
          elevation={0}
          position="fixed"
          sx={{
            width: {
              xs: "100%",
              md: `calc(100% - ${width}px)`,
            },
            transition: "0.1s",
            background: deepOrange[500],
            pr: 4,
          }}
        >
          <Stack direction="row" justifyContent={"space-between"}>
            <Toolbar>
              <MediaQuery minWidth={1080}>
                <IconButton color="inherit" onClick={controlDrawerDesktop}>
                  <span className="material-icons-outlined">menu</span>
                </IconButton>
              </MediaQuery>
              <MediaQuery maxWidth={1080}>
                <IconButton color="inherit" onClick={controlDrawerMobile}>
                  <span className="material-icons-outlined">menu</span>
                </IconButton>
              </MediaQuery>
            </Toolbar>
            <Toolbar>
              <Stack direction={"row"} spacing={"5px"} alignItems={"center"}>
                <IconButton color="inherit">
                  <span className="material-icons-outlined">
                    shopping_basket
                  </span>
                </IconButton>
                <IconButton color="inherit">
                  <span className="material-icons-outlined">mail</span>
                </IconButton>
                <IconButton color="inherit">
                  <span className="material-icons-outlined">notifications</span>
                </IconButton>
                <IconButton onClick={openProfile} color="inherit">
                  <Avatar src="https://avatars.githubusercontent.com/u/95223801?s=40&v=4" />
                </IconButton>
                <Menu
                  anchorEl={parent}
                  open={open}
                  onClick={closeProfileMenu}
                  onClose={closeProfileMenu}
                  PaperProps={{
                    elevation: 0,
                    sx: {
                      overflow: "visible",
                      filter: "drop-shadow(0px 2px 8px rgba(0,0,0,0.32))",
                      mt: 1.5,
                      "& .MuiAvatar-root": {
                        width: 32,
                        height: 32,
                        ml: -0.5,
                        mr: 1,
                      },
                      "&:before": {
                        content: '""',
                        display: "block",
                        position: "absolute",
                        top: 0,
                        right: 14,
                        width: 10,
                        height: 10,
                        bgcolor: "background.paper",
                        transform: "translateY(-50%) rotate(45deg)",
                        zIndex: 0,
                      },
                    },
                  }}
                  transformOrigin={{ horizontal: "right", vertical: "top" }}
                  anchorOrigin={{ horizontal: "right", vertical: "bottom" }}
                >
                  <MenuItem>
                    <Avatar />
                    Profile
                  </MenuItem>
                  <MenuItem>
                    <Avatar />
                    Account
                  </MenuItem>
                  <Divider />
                  <MenuItem>
                    <ListItemIcon>
                      <span
                        className="material-icons-outlined"
                        style={{ marginRight: "10px" }}
                      >
                        person_add
                      </span>
                      Add another account
                    </ListItemIcon>
                  </MenuItem>

                  <MenuItem>
                    <ListItemIcon>
                      <span
                        className="material-icons-outlined"
                        style={{ marginRight: "10px" }}
                      >
                        settings
                      </span>
                      Setting
                    </ListItemIcon>
                  </MenuItem>

                  <MenuItem>
                    <ListItemIcon>
                      <span
                        className="material-icons-outlined"
                        style={{ marginRight: "10px" }}
                      >
                        logout
                      </span>
                      Logout
                    </ListItemIcon>
                  </MenuItem>
                </Menu>
              </Stack>
            </Toolbar>
          </Stack>
        </AppBar>
        <Stack
          sx={{
            transition: "0.1s",
            ml: {
              xs: 0,
              md: `${width}px`,
            },
            mt: 5,
            p: 3,
            bgcolor: "#f5f5f5",
            height: "100vh",
          }}
        >
          <Breadcrumbs aria-label="breadcrumb" sx={{ my: 4 }}>
            {routing.map((item, index) => {
              if (index > 0) {
                return (
                  <BreadLink
                    key={index}
                    data={{
                      item: item,
                      index: index,
                      length: routing.length - 1,
                    }}
                  />
                );
              }
            })}
          </Breadcrumbs>
          <Outlet />
        </Stack>
      </Stack>
    </>
  );
}

export default Admin;
